generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  username  String    @unique @db.VarChar(50)
  password  String
  isAuthor  Boolean   @default(false)
  avatarUrl String    @default("https://static.vecteezy.com/system/resources/thumbnails/009/292/244/small/default-avatar-icon-of-social-media-user-vector.jpg")
  createdAt DateTime  @default(now())
  comments  Comment[]
  likes     Like[]
  posts     Post[]
}

model Post {
  id          String    @id @default(uuid())
  title       String    @db.VarChar(50)
  text        String
  authorId    String
  isPublished Boolean   @default(false)
  photoUrl    String    @default("https://media.sproutsocial.com/uploads/2022/05/How-to-post-on-instagram-from-pc.jpg")
  createdAt   DateTime  @default(now())
  comments    Comment[]
  likes       Like[]
  author      User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
}

model Comment {
  id        String   @id @default(uuid())
  text      String   @db.VarChar(250)
  postId    String
  userId    String
  createdAt DateTime @default(now())
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Like {
  id     String @id @default(uuid())
  postId String
  userId String
  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([postId, userId])
}
